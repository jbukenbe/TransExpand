function problem = pca_val_est(problem)
% This function takes the problem from the dyn_DC_OPF function and uses
% principal component analysis to make estimates of the value of future
% plans 


for t_idx = 1:30
all_plan = de2bi(problem.plan_id-1, problem.params.cand.n);
ordering = randperm(1024)';
plan = all_plan(ordering(1:10),:);
val = problem.cand_cost(ordering(1:10));

A = [val,plan];
Amean = mean(A);
Astd = std(A);
A_stand = (A-Amean)./Astd;

[eiganvectors,~, eiganvalues] = pca(A_stand);
for e_idx = 1: size(eiganvalues)
    line_trans = all_plan*eiganvectors(2:end,1:e_idx);
    stand_val_est = (line_trans.*eiganvalues(1:e_idx)')*eiganvectors(1,1:e_idx)';
    val_est = stand_val_est*Astd(1)+Amean(1);
    mdl = fitlm(val_est,problem.cand_cost);
    mdl.Rsquared.Ordinary
%    scatter(val_est, problem.cand_cost);
%    xlabel('PCA Estimate');
%    ylabel('True Value')
end
en
    pca_data.val_est = val_est;
    pca_data.eiganvalues = eiganvalues;
    pca_data.eiganvectors = eiganvectors;
    problem.params.pca_data =  pca_data;



end


